
@model IEnumerable<UsersViewModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Users";
    
}

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div aria-live="polite" aria-atomic="true" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <img src="~/img/checkmark.png" class="rounded me-2" alt="Success Icon" width="20" height="20">
                <strong class="me-auto text-primary">Success!</strong>
                <small class="text-muted">@DateTime.Now.ToString("hh:mm tt")</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

<div class="container">

        <h1 class="my-4 w-50 mx-auto text-center fw-bold border-bottom pb-3">All Users</h1>

        <div class="container">
            <form class="row justify-content-center align-items-center" asp-controller="User" asp-action="SearchUsers">
                <div class="col-md-6">
                    <div class="input-group shadow rounded-pill">
                        <input class="form-control border-0 rounded-pill px-3"
                               type="text"
                               id="searchInput"
                               placeholder="🔍 Search By User..."
                               aria-label="Search"
                               style="height: 50px; font-size: 1.1rem;" />
                    </div>
                </div>
            </form>
        </div>



</div>
@if (Model.Any())
{
    <div class="table-responsive mt-3">
        <table class="table table-striped table-hover text-center align-middle shadow-sm rounded">
            <thead class="table-dark">
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.FName</td>
                        <td>@user.LName</td>
                        <td>@user.Email</td>
                     <td>@(user.Roles != null && user.Roles.Count > 0 ? string.Join(", ", user.Roles) : "No Role Assigned")</td>
                        <td>@Json.Serialize(user.Roles)</td> 


                        <td><partial name="_ButtonsPartial" model="user.Id" /></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info mt-3">
        <h1 class="text-center">No Users Found!</h1>
    </div>
}


    </main>
</div>

<!-- Modal for Deleting Employee -->
@foreach (var user in Model)
{
    <div class="modal fade" id="deleteModal-@user.Id" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this employee?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form method="post" asp-controller="User" asp-action="Delete" asp-route-id="@user.Id">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toastEl = document.querySelector(".toast");
        var toast = new bootstrap.Toast(toastEl, { delay: 5000 }); // Auto-hide after 5 seconds
        toast.show();
    });
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
      $(document).ready(function () {
        let searchTimeout;

        function fetchEmployees(searchValue = "") {
            $.ajax({
                url: "/User/SearchUsers", // Controlla che il percorso sia corretto
                type: "GET",
                data: { searchValue: searchValue },
                success: function (response) {
                    let tbody = $("#userTableBody");
                    tbody.empty();

                    if (response.trim() !== "") {
                        tbody.html(response); // Carica direttamente l'HTML con i _ButtonsPartial già renderizzati lato server
                    } else {
                        tbody.append('<tr><td colspan="10" class="text-center">No Users Found!</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                }
            });
        }

        $("#searchInput").on("input", function () {
            clearTimeout(searchTimeout);

            let searchValue = $(this).val().trim();

            if (searchValue.length < 3 && searchValue.length > 0) {
                $("#userTableBody").html('<tr><td colspan="10" class="text-center">Type at least 3 characters...</td></tr>');
                return;
            }

            searchTimeout = setTimeout(function () {
                fetchEmployees(searchValue);
            }, 500);
        });

        // Se il campo di ricerca è vuoto, mostra tutti gli employee
        $("#searchInput").on("keyup", function () {
            if ($(this).val().trim() === "") {
                fetchEmployees();
            }
        });

        // Carica tutti gli employee all'inizio
        fetchEmployees();
    });

</script>


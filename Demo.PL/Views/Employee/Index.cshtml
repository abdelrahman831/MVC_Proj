@model IEnumerable<EmployeeToReturnDto>
@inject IDepartmentService departmentService
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Employees";
    var Departments = new SelectList(await departmentService.GetAllDepartmentsAsync(), nameof(DepartmentToReturnDto.Id), nameof(DepartmentToReturnDto.Name));
}

@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div aria-live="polite" aria-atomic="true" class="position-fixed bottom-0 end-0 p-3" style="z-index: 1050;">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <img src="~/img/checkmark.png" class="rounded me-2" alt="Success Icon" width="20" height="20">
                <strong class="me-auto text-primary">Success!</strong>
                <small class="text-muted">@DateTime.Now.ToString("hh:mm tt")</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

<div class="container">


        <h1 class="w-50 mx-auto text-center fw-bold border-bottom pb-1">All Employees</h1>

        <div class="container">
            <form class="row justify-content-center align-items-center" asp-action="SearchEmployees">
                <div class="col-md-6">
                    <div class="input-group shadow rounded-pill">
                        <input class="form-control border-0 rounded-pill px-3"
                               type="text"
                               id="searchInput"
                               placeholder="🔍 Search By Employee..."
                               aria-label="Search"
                               style="height: 50px; font-size: 1.1rem;" />
                    </div>
                </div>
            </form>
        </div>         
</div>

<div class="d-flex justify-content-center">
    <a asp-controller="Employee" asp-action="Create"
       class="text-decoration-none"
       style="font-size: 3rem; color: #5c6bc0; transition: transform 0.2s ease, color 0.2s ease;">
        <i class="fa-solid fa-square-plus"></i>
    </a>
</div>

<style>
    a:hover i {
        color: #283593; /* Cambia colore al passaggio del mouse */
        transform: scale(1.2); /* Effetto di ingrandimento */
    }
</style>


@if (Model.Count() > 0)
        {
    <div class="table table-striped table-hover mt-3" id="employeeTableContainer">
                <table class="table table-striped table-hover text-center align-middle shadow-sm rounded">
                    <thead class="table-dark">
                        <tr>
                            <th>Photo</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Type</th>
                            <th>Age</th>
                            <th>Salary</th>
                            <th>Department</th>
                            <th>Active</th>
                            <th>Gender</th>
                    <th>Actions</th>

                        </tr>
                    </thead>
                    <tbody id="employeeTableBody">
                        @foreach (var employee in Model)
                        {
                            <tr>
                                <td>
                                    <img src="~/Files/Images/@(employee.ImagePath ?? "NotFound.png")" class="rounded-circle" width="40" height="40" />
                                </td>
                                <td>@employee.Name</td>
                                <td>@employee.Email</td>
                                <td>@employee.EmployeeType</td>
                                <td>@employee.Age</td>
                                <td>@employee.Salary</td>
                        <td>
                            @if (employee.DepartmentId == null)
                            {

                                <p>No Department</p>

                            }
                            else
                            {
                                <a asp-controller="Department" asp-action="Details" asp-route-id="@employee.DepartmentId.ToString()" class="text-primary fw-bold">
                                    @(Departments.FirstOrDefault(d => d.Value == employee.DepartmentId.ToString()).Text)
                                </a>
                            }

                        </td>
                                <td>
                                    <span class="badge @(employee.IsActive ? "bg-success" : "bg-danger")">
                                        @(employee.IsActive ? "Yes" : "No")
                                    </span>
                                </td>
                                <td>@employee.Gender</td>
                       @*  <td> @Html.PartialAsync("_ButtonsPartial", employee.Id.ToString())  </td> *@
                        <partial name="_ButtonsPartial" model="@employee.Id.ToString()" />


                    </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-3">
                <h1 class="text-center">No Employees Found!</h1>
            </div>
        }


<!-- Modal for Deleting Employee -->
@foreach (var employee in Model)
{
    <div class="modal fade" id="deleteModal-@employee.Id" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this employee?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <form method="post" asp-controller="Employee" asp-action="Delete" asp-route-id="@employee.Id.ToString()">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var toastEl = document.querySelector(".toast");
        var toast = new bootstrap.Toast(toastEl, { delay: 5000 }); // Auto-hide after 5 seconds
        toast.show();
    });
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
      $(document).ready(function () {
        let searchTimeout;

        function fetchEmployees(searchValue = "") {
            $.ajax({
                url: "/Employee/SearchEmployees", // Controlla che il percorso sia corretto
                type: "GET",
                data: { searchValue: searchValue },
                success: function (response) {
                    let tbody = $("#employeeTableBody");
                    tbody.empty();

                    if (response.trim() !== "") {
                        tbody.html(response); // Carica direttamente l'HTML con i _ButtonsPartial già renderizzati lato server
                    } else {
                        tbody.append('<tr><td colspan="10" class="text-center">No Employees Found!</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                }
            });
        }

        $("#searchInput").on("input", function () {
            clearTimeout(searchTimeout);

            let searchValue = $(this).val().trim();

            if (searchValue.length < 3 && searchValue.length > 0) {
                $("#employeeTableBody").html('<tr><td colspan="10" class="text-center">Type at least 3 characters...</td></tr>');
                return;
            }

            searchTimeout = setTimeout(function () {
                fetchEmployees(searchValue);
            }, 500);
        });

        // Se il campo di ricerca è vuoto, mostra tutti gli employee
        $("#searchInput").on("keyup", function () {
            if ($(this).val().trim() === "") {
                fetchEmployees();
            }
        });

        // Carica tutti gli employee all'inizio
        fetchEmployees();
    });

</script>

